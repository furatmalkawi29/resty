{"version":3,"sources":["components/navbar/navbar.jsx","components/header/header.jsx","components/footer/footer.jsx","components/form/form.jsx","components/history/history.jsx","components/results/results.jsx","views/home.jsx","views/help.jsx","views/HistoryView.jsx","components/main/main.jsx","App.js","index.js"],"names":["Navbar","className","to","Component","Header","Footer","Form","changeHandler","event","props","inputHandler","target","name","value","showResults","a","preventDefault","loadingHandler","options","method","input","headers","console","log","body","Object","defineProperty","fetch","url","response","json","responseParsed","get","formHandler","queryObj","JSON","stringify","key","Math","floor","random","toString","substring","isAvailable","values","localStorage","includes","ok","setItem","errorHandler","message","Fragment","onSubmit","this","type","onChange","onClick","History","handleClicked","innerHTML","split","clicked","parse","getItem","route","historyHandler","historyRouteHandler","handleRun","id","setState","isRedirect","state","map","index","condition","Results","children","Home","isloading","src","alt","error","Headers","Response","Help","HistoryView","Main","property","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daba07d1.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport './navbar.scss'\nclass Navbar extends Component {\n  render() {\n    return (\n        <nav>\n          <ul>\n          <li><Link className=\"link_style \" to=\"/\">Home</Link></li>\n          <li><Link className=\"link_style\" to=\"/history\">History</Link></li>\n          <li><Link className=\"link_style\" to=\"/help\">Help</Link></li>\n          </ul>\n        </nav>\n    )\n  }\n}\n\nexport default Navbar\n","import React from 'react'\nimport '../../design/design.scss'\nimport './header.scss'\nimport  Navbar from '../navbar/navbar'\n\n\nfunction Header () {\n    return (\n        <header>\n          <h1>RESTy</h1>\n          <Navbar/>\n        </header>)\n}\n\nexport default Header;\n","import React from 'react'\n\nimport './footer.scss'\n\nfunction  Footer  () {\n    return (\n      <footer>\n        <p>\n          &copy; Code Fellows 2021\n        </p>\n      </footer>\n    );\n\n}\n\nexport default Footer\n","\nimport React, { Component } from 'react'\n\nimport './form.scss'\n\n class Form extends Component {\n  \n\n  //called when anything in form changes\n  changeHandler = (event) => {\n    this.props.inputHandler(event.target.name, event.target.value) \n  }\n\n\n   //called when Go button clicked\n   showResults = async (event) => {\n    event.preventDefault();\n    let response;\n    \n    try{\n    //loading started\n    this.props.loadingHandler(true);\n    //---------------------------------fetch url :\n    let options = {\n      method: this.props.input.method,\n       headers: {\n          // body data type must match \"Content-Type\" header\n         'Content-Type': 'application/json; charset=UTF-8'}};\n\n\n         //add body property only when method isn't get\n         if (this.props.input.method !=='get') \n         {\n           console.log( this.props.input.body);\n          Object.defineProperty(options, 'body',{ value: this.props.input.body\n          });\n         } \n         /* in browser body should follow json obj rules:\n         - both key and value are double-quoted \"title\":\"hello\" \n         - no comma after last property */\n\n     response = await fetch(this.props.input.url, options );\n\n    let responseParsed = await response.json(); //parse the response\n    let headers = {'content-type' : await response.headers.get('content-type')};\n\n    \n    this.props.formHandler(responseParsed,headers);\n\n     //loading ended\n    this.props.loadingHandler(false);\n\n\n    \n    //-------------------------- adding to localStorage\n    let queryObj = JSON.stringify({ url:this.props.input.url,\n      method:this.props.input.method,\n      body:this.props.input.body,\n      response: responseParsed,\n      headers: headers,\n    });\n   \n    // to set unique key\n    let key = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n          .toString(16)\n          .substring(1);\n    }\n\n    //check if request exist among localStorage values: true --> exist\n   let isAvailable = Object.values(localStorage).includes(queryObj);\n\n    if (response.ok &&!isAvailable)//check if request was successful && not in localStorage\n    {localStorage.setItem(key(),\n      queryObj);}\n\n    }catch (error){\n      //error.message instead of error \n      //not acceptable to render objects\n      this.props.errorHandler(error.message);\n      }\n      \n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.showResults}>\n      <section className=\"input-sec\">\n        <input type=\"text\" name=\"url\"  value={this.props.input.url}\n onChange={this.changeHandler}></input>\n        <button>GO</button>\n      </section>\n\n      {/* default type for button inside form is:submit */}\n      <section className=\"btn-sec\">\n         <textarea name=\"body\" value={this.props.input.body} onChange={this.changeHandler}></textarea>\n         <button type=\"button\" name=\"method\" value=\"get\"  onClick={this.changeHandler}>GET</button>\n         <button type=\"button\" name=\"method\" value=\"post\"  onClick={this.changeHandler}>POST</button>\n         <button type=\"button\" name=\"method\" value=\"put\"  onClick={this.changeHandler}>PUT</button>\n         <button type=\"button\" name=\"method\" value=\"delete\"  onClick={this.changeHandler}>DELETE</button>\n      </section>\n      </form>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Form\n","import React, { Component } from 'react'\nimport './history.scss'\nimport {If,Then,Else} from 'react-if'\nimport {Redirect} from 'react-router-dom'\n\n class History extends Component {\n  \n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       isRedirect:false\n    }\n  }\n  \n\n  handleClicked = (event) => {\n    \n    // let ok = document.getElementById('historyDiv');\n          //gets previous hits from localStorage\n      let key = event.target.innerHTML.split(' ')[0];\n      let clicked = JSON.parse(localStorage.getItem(key));\n\n      //for home route call historyHandler in home.jsx\n      if (this.props.route===\"home\"){\n      this.props.historyHandler(clicked);\n    } else {\n      //for history route call historyRouteHandler in historyView.jsx\n      this.props.historyRouteHandler(clicked.response,clicked.headers);\n    }\n  }\n\n\n  handleRun= (event) =>{\n    let key = event.target.id;\n    let clicked = JSON.parse(localStorage.getItem(key));\n    //populate form in home route and prepare for submit\n    this.props.historyHandler(clicked);\n    //redirect to home route\n    this.setState({isRedirect:true})\n  }\n\n  render() {\n    return (\n      //renders previous hits \n      <div className=\"history\">\n       { Object.values(localStorage).map((queryObj,index) =>\n\n       <div className=\"query\" key={localStorage.key(index)}>\n         <div>\n         <pre onClick= {this.handleClicked}>\n         {localStorage.key(index)}     {JSON.parse(queryObj).method}           {JSON.parse(queryObj).url}\n         </pre>\n         \n         <If condition={this.props.route ===\"history\"}>\n           <Then>\n             <p>{JSON.parse(queryObj).body}</p>\n           </Then>\n         </If>\n         </div>\n\n         <If condition={this.props.route ===\"history\"}>\n           <Then>\n             <button onClick={this.handleRun} id={localStorage.key(index)}>Re-run</button>\n           </Then>\n         </If>\n         </div>\n       )}\n       <If condition={this.state.isRedirect}>\n         <Then>\n         <Redirect to=\"/\" />\n         </Then>\n       </If>\n      </div>\n    )\n  }\n}\n\nexport default History\n","import React, { Component } from 'react'\nimport './results.scss'\nimport History from '../history/history'\n\n class Results extends Component {\n  render() {\n\n    return (\n      <React.Fragment>\n      <section className=\"results-sec\">\n      <History route=\"home\" historyHandler={this.props.historyHandler}/>\n        {this.props.children}\n      </section>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Results\n","import React, { Component } from 'react'\nimport Form from '../components/form/form.jsx'\n\nimport Results from '../components/results/results'\nimport {If,Then,Else} from 'react-if'\n\nclass Home extends Component {\n  render() {\n\n    let input = {\n      method:this.props.state.method,\n      url:this.props.state.url,\n      body:this.props.state.body\n    }\n    return (\n      <React.Fragment>\n                <Form loadingHandler={this.props.loadingHandler} formHandler={this.props.formHandler} inputHandler={this.props.inputHandler} errorHandler={this.props.errorHandler} input={input}/>\n\n<Results historyHandler={this.props.historyHandler}>\n\n<If condition={this.props.state.isloading}>\n<img src={\"https://media.tenor.com/images/5f1c57a4f18059b1bb946df247f8561d/tenor.gif\"} alt=\"Loading\" />\n</If>\n\n\n<If condition={this.props.state.error} >\n<Then>\n<p>{this.props.state.error}</p>\n</Then>\n<Else>\n<If condition={this.props.state.response}>\n<Then>\n<section className=\"response\"><p><pre>{JSON.stringify({Headers: this.props.state.headers},null,'\\t')}</pre></p>\n<p><pre>{JSON.stringify({Response: this.props.state.response},null,'\\t')}</pre></p></section>\n</Then>\n</If>\n</Else>\n</If>       \n</Results>\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\n\nexport class Help extends Component {\n  render() {\n    return (\n      \n      <section className=\"results-sec\">\n <div>- You are able to use all REST methods GET divOST DELETE PUT</div> \n<div>add your url in the sdivace and hit GO!</div>\n\n<div>In Home page you will click on any previous route and it will be populated in form again</div>\n<div>You will get results in home page on the side</div>\n<div>In History page you will get pre saved results from before</div>\n<div> You can click on routes to get results</div>\n<div> You can click on re-run to get the route populated again in form at home page</div>\n\n\n        </section>\n      \n    )\n  }\n}\n\nexport default Help\n","import React, { Component } from 'react'\nimport '../components/results/results.scss'\nimport History from '../components/history/history'\nimport {If,Then,Else} from 'react-if'\n\n class HistoryView extends Component {\n   constructor(props){\n     super(props);\n     this.state ={\n       response: null,\n       headers: null\n     }\n   }\n\n  historyRouteHandler= (response,headers)=> {\n    console.log('hello from history view');\n    this.setState({response,headers}) \n  }\n\n  render() {\n    return (\n   <React.Fragment>\n     \n    <section className=\"results-sec\">\n    <History route=\"history\" historyHandler={this.props.historyHandler} historyRouteHandler = {this.historyRouteHandler} />\n\n    <If condition={this.state.response}>\n    <Then>\n    <section className=\"response\"><p><pre>{JSON.stringify({Headers: this.state.headers},null,'\\t')}</pre></p>\n    <p><pre>{JSON.stringify({Response: this.state.response},null,'\\t')}</pre></p></section>\n    </Then>\n    </If>\n    </section>\n\n   </React.Fragment>\n    )\n  }\n}\n\nexport default HistoryView\n","import React, { Component } from 'react'\nimport './main.scss'\nimport Home from '../../views/home'\nimport Help from '../../views/help'\nimport {Switch , Redirect, Route } from 'react-router-dom'\nimport HistoryView from '../../views/HistoryView'\n\n class Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      method:\"get\",\n      url:'/',\n      body:'',\n       headers:null,\n       response: null,\n       isloading:false,\n       error: null      \n    }\n  }\n\n  inputHandler =(property,value) =>{\n    this.setState({[property]:value});\n  }\n  \n  \n  formHandler = (response,headers) =>{\n    // successful response then no errors\n    //set error to null\n    //to not render old errors with response\nthis.setState({headers , response, error:null})\n  }\n\n\n  historyHandler = (clicked)=> {\n    let {method, url , body}= clicked;\n    this.setState({method, url , body});\n  }\n\n\n  loadingHandler = (isloading) =>{\nthis.setState({isloading});\nconsole.log(\"loading\" + isloading);\n  }\n  \n  errorHandler = (error)=>{\n    this.setState({error});\n  }\n\n\n  render() {\n\n\n    return(\n      <main>\n        <Switch>\n          {/* for github deployment, it starts with path: /resty */}\n        <Route exact path=\"/resty\">\n        <Redirect to=\"/\" />\n        </Route>\n\n        <Route exact path=\"/\">\n        <Home  inputHandler ={this.inputHandler}\n        formHandler= {this.formHandler}\n        historyHandler= {this.historyHandler}\n        loadingHandler= {this.loadingHandler }\n        errorHandler= {this.errorHandler} state={this.state}/>\n        </Route>\n\n\n        <Route path=\"/help\" component={Help}/>\n\n        <Route path=\"/history\">\n          <HistoryView historyHandler={this.historyHandler}/>\n          </Route>\n      </Switch>\n      </main>\n    )\n  }\n\n}\n\nexport default Main\n\n","import Header from './components/header/header'\nimport Footer from './components/footer/footer.jsx'\nimport Main from './components/main/main.jsx'\n\nimport './design/design.scss'\nfunction App() {\n  return (\n    <div className=\"app-style\">\n      <Header/>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n\n/* - HTTP headers let the client and the server\n pass additional information with an HTTP request or response.\n // Request headers \n // Response headers\n \n Content-Type header : string\n has type of data passed in request or received in response\n Example// text/css, text/html , video/mp4 , application/json \n \n */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
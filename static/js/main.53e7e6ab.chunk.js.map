{"version":3,"sources":["components/header/header.jsx","components/footer/footer.jsx","components/form/form.jsx","components/history/history.jsx","components/results/results.jsx","components/main/main.jsx","App.js","index.js"],"names":["Header","Footer","Form","changeHandler","event","props","inputHandler","target","name","value","showResults","a","preventDefault","loadingHandler","options","method","input","headers","console","log","body","Object","defineProperty","fetch","url","response","json","responseParsed","get","formHandler","queryObj","JSON","stringify","key","Math","floor","random","toString","substring","isAvailable","values","localStorage","includes","ok","setItem","errorHandler","message","Fragment","onSubmit","this","className","type","onChange","onClick","Component","History","handleClicked","innerHTML","split","clicked","parse","getItem","historyHandler","map","index","Results","children","Main","property","setState","error","isloading","state","condition","src","alt","Headers","Response","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TAYeA,MAPf,WACI,OACI,iCACE,0C,MCOKC,MAXf,WACI,OACE,iCACE,0D,4DCoGOC,G,kNAnGbC,cAAgB,SAACC,GACf,EAAKC,MAAMC,aAAaF,EAAMG,OAAOC,KAAMJ,EAAMG,OAAOE,Q,EAKzDC,Y,uCAAc,WAAON,GAAP,2BAAAO,EAAA,6DACbP,EAAMQ,iBADO,SAMb,EAAKP,MAAMQ,gBAAe,GAEtBC,EAAU,CACZC,OAAQ,EAAKV,MAAMW,MAAMD,OACxBE,QAAS,CAEP,eAAgB,oCAIe,QAA3B,EAAKZ,MAAMW,MAAMD,SAEnBG,QAAQC,IAAK,EAAKd,MAAMW,MAAMI,MAC/BC,OAAOC,eAAeR,EAAS,OAAO,CAAEL,MAAO,EAAKJ,MAAMW,MAAMI,QAnBzD,SA0BKG,MAAM,EAAKlB,MAAMW,MAAMQ,IAAKV,GA1BjC,cA0BZW,EA1BY,iBA4BcA,EAASC,OA5BvB,eA4BTC,EA5BS,iBA6ByBF,EAASR,QAAQW,IAAI,gBA7B9C,oBA6BTX,EA7BS,CA6BE,eA7BF,MAgCb,EAAKZ,MAAMwB,YAAYF,EAAeV,GAGtC,EAAKZ,MAAMQ,gBAAe,GAKtBiB,EAAWC,KAAKC,UAAU,CAAER,IAAI,EAAKnB,MAAMW,MAAMQ,IACnDT,OAAO,EAAKV,MAAMW,MAAMD,OACxBK,KAAK,EAAKf,MAAMW,MAAMI,OAIpBa,EAAM,WACR,OAAOC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WACvBC,SAAS,IACTC,UAAU,IAIdC,EAAclB,OAAOmB,OAAOC,cAAcC,SAASZ,GAElDL,EAASkB,KAAMJ,GAClBE,aAAaG,QAAQX,IACpBH,GAzDW,kDA8DX,EAAKzB,MAAMwC,aAAa,KAAMC,SA9DnB,0D,kGAqEf,WACE,OACE,cAAC,IAAMC,SAAP,UACE,uBAAMC,SAAUC,KAAKvC,YAArB,UACF,0BAASwC,UAAU,YAAnB,UACE,uBAAOC,KAAK,OAAO3C,KAAK,MAAOC,MAAOwC,KAAK5C,MAAMW,MAAMQ,IAC9D4B,SAAUH,KAAK9C,gBACR,2CAIF,0BAAS+C,UAAU,UAAnB,UACG,0BAAU1C,KAAK,OAAOC,MAAOwC,KAAK5C,MAAMW,MAAMI,KAAMgC,SAAUH,KAAK9C,gBACnE,wBAAQgD,KAAK,SAAS3C,KAAK,SAASC,MAAM,MAAO4C,QAASJ,KAAK9C,cAA/D,iBACA,wBAAQgD,KAAK,SAAS3C,KAAK,SAASC,MAAM,OAAQ4C,QAASJ,KAAK9C,cAAhE,kBACA,wBAAQgD,KAAK,SAAS3C,KAAK,SAASC,MAAM,MAAO4C,QAASJ,KAAK9C,cAA/D,iBACA,wBAAQgD,KAAK,SAAS3C,KAAK,SAASC,MAAM,SAAU4C,QAASJ,KAAK9C,cAAlE,gC,GA9FWmD,cCuBLC,G,wNAvBbC,cAAgB,SAACpD,GACfc,QAAQC,IAAI,uCACZ,IAAIc,EAAM7B,EAAMG,OAAOkD,UAAUC,MAAM,KAAK,GACxCC,EAAU5B,KAAK6B,MAAMnB,aAAaoB,QAAQ5B,IAE9C,EAAK5B,MAAMyD,eAAeH,I,4CAI5B,WAAU,IAAD,OACP,OACE,qBAAKT,UAAU,UAAf,SACG7B,OAAOmB,OAAOC,cAAcsB,KAAI,SAACjC,EAASkC,GAAV,OAElC,qBAAKX,QAAU,EAAKG,cAApB,SAAiE,gCAC9Df,aAAaR,IAAI+B,GAD6C,QAChCjC,KAAK6B,MAAM9B,GAAUf,OADW,cACQgB,KAAK6B,MAAM9B,GAAUN,QADtDiB,aAAaR,IAAI+B,a,GAhBzCV,cCeRW,E,4JAbb,WAEE,OACE,cAAC,IAAMlB,SAAP,UACA,0BAASG,UAAU,cAAnB,UACA,cAAC,EAAD,CAASY,eAAgBb,KAAK5C,MAAMyD,iBACjCb,KAAK5C,MAAM6D,kB,GAPGZ,a,eCmFRa,E,kDA/Eb,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,aAAc,SAAC8D,EAAS3D,GACtB,EAAK4D,SAAL,eAAgBD,EAAU3D,KAdT,EAkBnBoB,YAAc,SAACJ,EAASR,GAI1B,EAAKoD,SAAS,CAACpD,UAAUQ,WAAU6C,MAAM,QAtBpB,EAyBnBR,eAAiB,SAACH,GAChB,IAAK5C,EAAqB4C,EAArB5C,OAAQS,EAAamC,EAAbnC,IAAMJ,EAAOuC,EAAPvC,KACnB,EAAKiD,SAAS,CAACtD,SAAQS,MAAMJ,UA3BZ,EA8BnBP,eAAiB,SAAC0D,GACpB,EAAKF,SAAS,CAACE,cACfrD,QAAQC,IAAI,UAAYoD,IAhCH,EAmCnB1B,aAAe,SAACyB,GACd,EAAKD,SAAS,CAACC,WAlCf,EAAKE,MAAQ,CACXzD,OAAO,MACPS,IAAI,IACJJ,KAAK,GACJH,QAAQ,KACRQ,SAAU,KACV8C,WAAU,EACVD,MAAO,MATO,E,0CAwCnB,WACE,IAAItD,EAAQ,CACVD,OAAOkC,KAAKuB,MAAMzD,OAClBS,IAAIyB,KAAKuB,MAAMhD,IACfJ,KAAK6B,KAAKuB,MAAMpD,MAGlB,OACE,iCACE,cAAC,EAAD,CAAMP,eAAgBoC,KAAKpC,eAAgBgB,YAAaoB,KAAKpB,YAAavB,aAAc2C,KAAK3C,aAAcuC,aAAcI,KAAKJ,aAAc7B,MAAOA,IAEnJ,eAAC,EAAD,CAAS8C,eAAgBb,KAAKa,eAA9B,UAEL,cAAC,IAAD,CAAIW,UAAWxB,KAAKuB,MAAMD,UAA1B,SACA,qBAAKG,IAAK,4EAA6EC,IAAI,cAI9F,eAAC,IAAD,CAAIF,UAAWxB,KAAKuB,MAAMF,MAA1B,UACE,cAAC,IAAD,UACA,4BAAIrB,KAAKuB,MAAMF,UAEjB,cAAC,IAAD,UACE,cAAC,IAAD,CAAIG,UAAWxB,KAAKuB,MAAM/C,SAA1B,SACE,cAAC,IAAD,UACF,0BAASyB,UAAU,WAAnB,UAA8B,4BAAG,8BAAMnB,KAAKC,UAAU,CAAC4C,QAAS3B,KAAKuB,MAAMvD,SAAS,KAAK,UAC3F,4BAAG,8BAAMc,KAAKC,UAAU,CAAC6C,SAAU5B,KAAKuB,MAAM/C,UAAU,KAAK,gC,GAnEzC6B,aCQLwB,MAVf,WACE,OACE,sBAAK5B,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCNN6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.53e7e6ab.chunk.js","sourcesContent":["import React from 'react'\nimport '../../design/design.scss'\nimport './header.scss'\n\n\nfunction Header () {\n    return (\n        <header>\n          <h1>RESTy</h1>\n        </header>)\n}\n\nexport default Header;\n","import React from 'react'\n\nimport './footer.scss'\n\nfunction  Footer  () {\n    return (\n      <footer>\n        <p>\n          &copy; Code Fellows 2021\n        </p>\n      </footer>\n    );\n\n}\n\nexport default Footer\n","\nimport React, { Component } from 'react'\n\nimport './form.scss'\n\n class Form extends Component {\n  \n\n  changeHandler = (event) => {\n    this.props.inputHandler(event.target.name, event.target.value) \n  }\n\n\n\n   showResults = async (event) => {\n    event.preventDefault();\n    let response;\n    \n    try{\n    //loading started\n    this.props.loadingHandler(true);\n    //---------------------------------fetch url :\n    let options = {\n      method: this.props.input.method,\n       headers: {\n          // body data type must match \"Content-Type\" header\n         'Content-Type': 'application/json; charset=UTF-8'}};\n\n\n         //add body property only when method isn't get\n         if (this.props.input.method !=='get') \n         {\n           console.log( this.props.input.body);\n          Object.defineProperty(options, 'body',{ value: this.props.input.body\n          });\n         } \n         /* in browser body should follow json obj rules:\n         - both key and value are double-quoted \"title\":\"hello\" \n         - no comma after last property */\n\n     response = await fetch(this.props.input.url, options );\n\n    let responseParsed = await response.json(); //parse the response\n    let headers = {'content-type' : await response.headers.get('content-type')};\n\n    \n    this.props.formHandler(responseParsed,headers);\n\n     //loading ended\n    this.props.loadingHandler(false);\n\n\n    \n    //-------------------------- adding to localStorage\n    let queryObj = JSON.stringify({ url:this.props.input.url,\n      method:this.props.input.method,\n      body:this.props.input.body\n    });\n   \n    // to set unique key\n    let key = () => {\n      return Math.floor((1 + Math.random()) * 0x10000)\n          .toString(16)\n          .substring(1);\n    }\n\n    //check if request exist in localStorage : true exist\n   let isAvailable = Object.values(localStorage).includes(queryObj);\n\n    if (response.ok &&!isAvailable)//check if request was successful && not in localStorage\n    {localStorage.setItem(key(),\n      queryObj);}\n\n    }catch (error){\n      //error.message instead of error \n      //not acceptable to render objects\n      this.props.errorHandler(error.message);\n      }\n      \n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.showResults}>\n      <section className=\"input-sec\">\n        <input type=\"text\" name=\"url\"  value={this.props.input.url}\n onChange={this.changeHandler}></input>\n        <button>GO</button>\n      </section>\n\n      {/* default type for button inside form is:submit */}\n      <section className=\"btn-sec\">\n         <textarea name=\"body\" value={this.props.input.body} onChange={this.changeHandler}></textarea>\n         <button type=\"button\" name=\"method\" value=\"get\"  onClick={this.changeHandler}>GET</button>\n         <button type=\"button\" name=\"method\" value=\"post\"  onClick={this.changeHandler}>POST</button>\n         <button type=\"button\" name=\"method\" value=\"put\"  onClick={this.changeHandler}>PUT</button>\n         <button type=\"button\" name=\"method\" value=\"delete\"  onClick={this.changeHandler}>DELETE</button>\n      </section>\n      </form>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Form\n","import React, { Component } from 'react'\nimport './history.scss'\n\n class History extends Component {\n\n  handleClicked = (event) => {\n    console.log('from History: user clicked on query');\n    let key = event.target.innerHTML.split(' ')[0];\n    let clicked = JSON.parse(localStorage.getItem(key));\n\n    this.props.historyHandler(clicked);\n  }\n\n  \n  render() {\n    return (\n      <div className=\"history\">\n       { Object.values(localStorage).map((queryObj,index) =>\n\n       <div onClick= {this.handleClicked} key={localStorage.key(index)}><pre>\n         {localStorage.key(index)}     {JSON.parse(queryObj).method}           {JSON.parse(queryObj).url}\n         </pre></div>\n       )}\n      </div>\n    )\n  }\n}\n\nexport default History\n","import React, { Component } from 'react'\nimport './results.scss'\nimport History from '../history/history'\n\n class Results extends Component {\n  render() {\n\n    return (\n      <React.Fragment>\n      <section className=\"results-sec\">\n      <History historyHandler={this.props.historyHandler}/>\n        {this.props.children}\n      </section>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Results\n","import React, { Component } from 'react'\nimport Form from '../form/form.jsx'\nimport Results from '../results/results'\nimport './main.scss'\nimport {If,Then,Else} from 'react-if'\n\n\n class Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      method:\"get\",\n      url:'/',\n      body:'',\n       headers:null,\n       response: null,\n       isloading:false,\n       error: null      \n    }\n  }\n\n  inputHandler =(property,value) =>{\n    this.setState({[property]:value});\n  }\n  \n  \n  formHandler = (response,headers) =>{\n    // successful response then no errors\n    //set error to null\n    //to not render old errors with response\nthis.setState({headers , response, error:null})\n  }\n\n  historyHandler = (clicked)=> {\n    let {method, url , body}= clicked;\n    this.setState({method, url , body});\n  }\n\n  loadingHandler = (isloading) =>{\nthis.setState({isloading});\nconsole.log(\"loading\" + isloading);\n  }\n  \n  errorHandler = (error)=>{\n    this.setState({error});\n  }\n\n\n  render() {\n    let input = {\n      method:this.state.method,\n      url:this.state.url,\n      body:this.state.body\n    }\n\n    return(\n      <main>\n        <Form loadingHandler={this.loadingHandler} formHandler={this.formHandler} inputHandler={this.inputHandler} errorHandler={this.errorHandler} input={input}/>\n\n        <Results historyHandler={this.historyHandler}>\n\n   <If condition={this.state.isloading}>\n   <img src={\"https://media.tenor.com/images/5f1c57a4f18059b1bb946df247f8561d/tenor.gif\"} alt=\"Loading\" />\n   </If>\n\n\n<If condition={this.state.error} >\n  <Then>\n  <p>{this.state.error}</p>\n  </Then>\n<Else>\n  <If condition={this.state.response}>\n    <Then>\n  <section className=\"response\"><p><pre>{JSON.stringify({Headers: this.state.headers},null,'\\t')}</pre></p>\n<p><pre>{JSON.stringify({Response: this.state.response},null,'\\t')}</pre></p></section>\n</Then>\n  </If>\n</Else>\n</If>       \n        </Results>\n\n      </main>\n    )\n  }\n\n}\n\nexport default Main\n\n","import Header from './components/header/header'\nimport Footer from './components/footer/footer.jsx'\nimport Main from './components/main/main.jsx'\n\nimport './design/design.scss'\nfunction App() {\n  return (\n    <div className=\"app-style\">\n      <Header></Header>\n      <Main/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n\n/* - HTTP headers let the client and the server\n pass additional information with an HTTP request or response.\n // Request headers \n // Response headers\n \n Content-Type header : string\n has type of data passed in request or received in response\n Example// text/css, text/html , video/mp4 , application/json \n \n */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}